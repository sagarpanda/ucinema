{"version":3,"sources":["config.js","utils/fetchGoogleSheet.js","utils/parseGoogleSheet.js","utils/httpRequest.js","components/DataProvider.js","utils/routes.js","hooks/useSearch.js","containers/AppMenu.js","components/VideoCard.js","components/VideoCardGroup.js","containers/Home.js","containers/Movies.js","containers/TvSeries.js","containers/IntraMovies.js","containers/WatchVideo.js","containers/IntraWatchVideo.js","components/DetectRouteChange.js","App.js","serviceWorker.js","index.js"],"names":["config","intraBaseUrl","googleSheetId","checkerUrl","movieUrl","a","spreadsheetId","sheetNum","tab","fetchUrl","fetch","then","response","status","json","feed","entry","data","rowData","reduce","prev","curr","row","col","content","rowIndex","colIndex","fetchGoogleSheet","hiddenTags","parseGoogleSheet","responseData","first","rest","keys","Object","d","ob","prevOb","currKey","key","value","indexOf","push","url","httpRequest","DataContext","React","createContext","initialState","isLoading","subData","intranet","cloudData","cloudSubData","reducer","state","action","type","payload","Error","DataProvider","props","useReducer","dispatch","useEffect","dd","filter","parentId","temp","hidden","values","Provider","children","routes","baseRoute","useSearch","records","useState","loading","results","setData","history","useHistory","handleSearchChange","useCallback","e","item","title","toLowerCase","handleResultSelect","result","id","withRouter","activeItem","location","pathname","useContext","Menu","fixed","inverted","Item","header","as","Link","name","active","href","to","position","Responsive","Search","onSearchChange","onResultSelect","minWidth","Container","maxWidth","style","padding","input","width","paddingBottom","VideoCard","imgUrl","gUrl","createdDate","intra","Card","className","Image","size","src","wrapped","ui","Content","Description","VideoCardGroup","list","Group","map","Home","Helmet","Movies","movies","category","TvSeries","series","IntraMovies","console","log","Episodes","eps","epId","Label","paddingTop","dt","icon","WatchVideo","useParams","subname","imdbInfo","setImdbInfo","imdbID","extras","widerImgUrl","placeholder","length","Segment","Header","Subheader","desc","Embed","source","iframe","allowFullScreen","items","image","Poster","Title","description","Plot","meta","Year","Released","Genre","Director","Writer","extra","IntraWatchVideo","DetectRouteChange","listen","ReactGA","set","page","pageview","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","initialize"],"mappings":"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","file":"static/js/main.b49da6c7.chunk.js","sourcesContent":["const config = {\n  intraBaseUrl: 'https://192.168.29.102:9000',\n  googleSheetId: '1xqxT4Q0Zh4n9W5GYew-ltxfb4oG42icVlHQEX_RErQE',\n  checkerUrl: '/checker',\n  movieUrl: '/movies'\n}\n\nexport default config;","async function fetchGoogleSheet({spreadsheetId, sheetNum}) {\n  const tab = sheetNum || 1;\n  const fetchUrl = `https://spreadsheets.google.com/feeds/cells/${spreadsheetId}/${tab}/public/full?alt=json`;\n  const data = await fetch(fetchUrl).then(response => {\n    if(response.status === 200) {\n      return response.json();\n    } else {\n      return { feed: { entry: [] }};\n    }\n  });\n  // let count = 0;\n  const rowData = data.feed.entry.reduce((prev, curr) => {\n     const { row, col } = curr['gs$cell'];\n     const content = curr.content['$t'];\n     const rowIndex = row - 1;\n     const colIndex = col - 1;\n     if(prev[rowIndex]) {\n       prev[rowIndex][`col${colIndex}`] = content;\n     } else {\n       prev[rowIndex] = { [`col${colIndex}`]: content };\n     }\n     return prev;\n  }, []);\n  return rowData;\n}\n\nexport default fetchGoogleSheet;","const hiddenTags = ['hidden', 'y'];\n\nconst parseGoogleSheet = responseData => {\n  const [ first = {}, ...rest ] = responseData;\n  const keys = Object.keys(first);\n\n  const data = rest.reduce((prev, d) => {\n      const ob = keys.reduce((prevOb, currKey) => {\n          const key = first[currKey] || currKey;\n          const value = d[currKey];\n          if(key === 'hidden') {\n              prevOb[key] = hiddenTags.indexOf(value) > -1 ? true : false;\n          } else {\n              prevOb[key] = value;\n          }\n          return prevOb;\n      }, {});\n      prev.push(ob);\n      return prev;\n  }, []);\n\n  return data;\n};\n\nexport default parseGoogleSheet;","async function httpRequest(url) {\n  const data = await fetch(url).then(response => {\n    if(response.status === 200) {\n      const responseData = response.json();\n      return { data: responseData, status: true };\n    } else {\n      return { status: false };\n    }\n  });\n  return data;\n}\n\nexport default httpRequest;","import React, { useEffect, useReducer } from 'react';\nimport config from '../config';\nimport fetchGoogleSheet from '../utils/fetchGoogleSheet';\nimport parseGoogleSheet from '../utils/parseGoogleSheet';\nimport httpRequest from '../utils/httpRequest';\n\nconst DataContext = React.createContext({});\n\nconst initialState = {\n    isLoading: true,\n    data: [],\n    subData: {},\n    intranet: false,\n    cloudData: [],\n    cloudSubData: {}\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'fetchGoogleSuccess':\n        return {\n          ...state,\n          isLoading: false, \n          data: action.payload.data, \n          subData: action.payload.subData\n        };\n    case 'intraSuccess':\n        return { ...state, intranet: true };\n    case 'fetchCloudSuccess':\n        return { ...state, cloudData: action.payload };\n    case 'update':\n        return { ...state, ...action.payload };\n    default:\n        throw new Error();\n  }\n}\n\nconst DataProvider = (props) => {\n    const [ state, dispatch ] = useReducer(reducer, initialState);\n    useEffect(() => {\n        fetchGoogleSheet({\n            spreadsheetId: config.googleSheetId,\n            sheetNum: 1\n        })\n        .then(parseGoogleSheet)\n        .then(dd => {\n            const subData = {};\n            const data = dd.filter(d => {\n                if(d.parentId) {\n                    const temp = subData[d.parentId] || [];\n                    subData[d.parentId] = [...temp, d];\n                }\n                return !d.hidden && !d.parentId;\n            });\n            dispatch({ type: 'fetchGoogleSuccess', payload: { data, subData } });\n            return data;\n        })\n        .then(dd => {\n            const intraData = httpRequest(`${config.intraBaseUrl}${config.checkerUrl}`);\n            return intraData;\n        })\n        .then(dd => {\n            if (dd.status) {\n                dispatch({ type: 'intraSuccess' });\n\n                fetch(`${config.intraBaseUrl}${config.movieUrl}`).then(response => {\n                    if(response.status === 200) {\n                        return response.json();\n                    }\n                }).then(responseData => {\n                    dispatch({ type: 'fetchCloudSuccess', payload: responseData });\n                });\n                return true;\n            } else {\n                return false;\n            }\n        });\n    }, []);\n    const values = { ...state, dispatch };\n    return (\n        <DataContext.Provider value={values}>\n          {props.children}\n        </DataContext.Provider>\n    );\n};\n\nexport { DataContext };\n\nexport default DataProvider;","const routes = {\n  baseRoute: ''\n};\n\nexport default routes;","import { useState, useCallback } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nconst useSearch = (records) => {\n  const initData = { loading: false, value: '', results: [] };\n\n  const [ data, setData ] = useState(initData);\n  const history = useHistory();\n\n  const handleSearchChange = useCallback((e, { value }) => {\n    setData({ loading: true, value, results: [] });\n    const results = records.filter(item => item.title.toLowerCase().indexOf(value) > -1);\n    setData({ loading: false, value, results });\n  }, [records]);\n\n  const handleResultSelect = useCallback((e, { result }) => {\n    setData({ loading: false, value: '', results: [] });\n    history.push(`/watch/${result.id}`);\n  }, [history]);\n\n  return {\n    data,\n    handleSearchChange,\n    handleResultSelect\n  }\n};\n\nexport default useSearch;","import React, { useContext } from 'react';\nimport { Menu, Search, Responsive, Container } from 'semantic-ui-react';\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { DataContext } from '../components/DataProvider';\nimport routes from \"../utils/routes\";\nimport useSearch from '../hooks/useSearch';\n\nconst baseRoute = routes.baseRoute;\n\nconst AppMenu = ({ location }) => {\n    const activeItem = location.pathname;\n    const values = useContext(DataContext);\n\n    const { data, handleSearchChange, handleResultSelect } = useSearch(values.data);\n    \n    return (\n      <>\n        <Menu fixed='top' inverted>\n          <Menu.Item header>uCinema</Menu.Item>\n          <Menu.Item\n            as={Link}\n            name='home'\n            active={activeItem === `${baseRoute}/`}\n            href={`${baseRoute}/`}\n            to={`${baseRoute}/`}\n          />\n          <Menu.Item\n            as={Link}\n            name='movies'\n            active={activeItem === `${baseRoute}/movies`}\n            href={`${baseRoute}/movies`}\n            to={`${baseRoute}/movies`}\n          />\n          <Menu.Item\n            as={Link}\n            name='tv-series'\n            active={activeItem === `${baseRoute}/tv-series`}\n            href={`${baseRoute}/tv-series`}\n            to={`${baseRoute}/tv-series`}\n          />\n          {\n            values.intranet && (\n              <Menu.Item\n                as={Link}\n                name='intra-movies'\n                active={activeItem === `${baseRoute}/intra-movies`}\n                href={`${baseRoute}/intra-movies`}\n                to={`${baseRoute}/intra-movies`}\n              />\n            )\n          }\n          <Menu.Menu position='right'>\n            <Menu.Item>\n              <Responsive\n                as={Search}\n                loading={data.loading}\n                results={data.results}\n                value={data.value}\n                onSearchChange={handleSearchChange}\n                onResultSelect={handleResultSelect}\n                minWidth={550}\n              />\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n        <Responsive\n          as={Container}\n          maxWidth={550}\n          style={{ padding: '60px 0 20px' }}>\n          <Search\n            loading={data.loading}\n            results={data.results}\n            value={data.value}\n            onSearchChange={handleSearchChange}\n            onResultSelect={handleResultSelect}\n            minWidth={550}\n            input={{ style: { width: '100%' } }}\n          />\n        </Responsive>\n        <Responsive\n          as=\"div\"\n          minWidth={550}\n          style={{ paddingBottom: 84 }}\n        />\n      </>\n    );\n};\n\nexport default withRouter(AppMenu);","import React from 'react';\nimport { Card, Image } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\nimport routes from \"./../utils/routes\";\nimport './VideoCard.css';\n\nconst baseRoute = routes.baseRoute;\n\nconst VideoCard = ({ id, title, imgUrl, createdDate, intra }) => {\n    const gUrl = imgUrl || 'https://i.imgur.com/0FX7ZPe.jpg';\n    const href = intra ? `${baseRoute}/intra/watch/${id}` : `${baseRoute}/watch/${id}`;\n    return (\n        <Card as={Link} href={href} to={href} className=\"video-card\">\n            <Image className=\"fixed-height\" size=\"medium\" src={gUrl} wrapped ui={false} />\n            <Card.Content className=\"content-over-image\">\n                {/*<Card.Meta>\n                    <span className='date'>Added on {createdDate}</span>\n                </Card.Meta>*/}\n                <Card.Description className=\"color-white\">\n                {title}\n                </Card.Description>\n            </Card.Content>\n        </Card>\n    );\n};\n\nexport default VideoCard;","import React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport VideoCard from '../components/VideoCard';\n\nconst VideoCardGroup = ({ list, intra }) => {\n  return (\n    <Card.Group>\n        {\n            list.map(item => (\n              <VideoCard\n                intra={intra}\n                key={item.id}\n                id={item.id}\n                title={item.title}\n                imgUrl={item.imgUrl}\n                createdDate={item.createdDate}\n              />\n            ))\n        }\n    </Card.Group>\n  );\n};\n\nexport default VideoCardGroup;","import React, { useContext } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Container } from 'semantic-ui-react';\nimport { DataContext } from '../components/DataProvider';\nimport VideoCardGroup from '../components/VideoCardGroup';\n\nconst Home = () => {\n    const values = useContext(DataContext);\n    \n    return (\n        <Container>\n            <Helmet>\n                <title>uCinema</title>\n                <meta name=\"description\" content=\"Watch movies on uCinema\" />\n            </Helmet>\n            <VideoCardGroup list={values.data} />\n        </Container>\n    );\n};\n\nexport default Home;","import React, { useContext } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Container } from 'semantic-ui-react';\nimport { DataContext } from '../components/DataProvider';\nimport VideoCardGroup from '../components/VideoCardGroup';\n\nconst Movies = () => {\n    const values = useContext(DataContext);\n    const movies = values.data.filter(item => item.category === 'movie');\n\n    return (\n        <Container>\n            <Helmet>\n                <title>Movies | uCinema</title>\n                <meta name=\"description\" content=\"Watch movies on uCinema\" />\n            </Helmet>\n            <VideoCardGroup list={movies} />\n        </Container>\n    );\n};\n\nexport default Movies;","import React, { useContext } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Container } from 'semantic-ui-react';\nimport { DataContext } from '../components/DataProvider';\nimport VideoCardGroup from '../components/VideoCardGroup';\n\nconst TvSeries = () => {\n    const values = useContext(DataContext);\n    const series = values.data.filter(item => item.category === 'series');\n\n    return (\n        <Container>\n            <Helmet>\n                <title>Tv Series | uCinema</title>\n                <meta name=\"description\" content=\"Watch tv series on uCinema\" />\n            </Helmet>\n            <VideoCardGroup list={series} />\n        </Container>\n    );\n};\n\nexport default TvSeries;","import React, { useContext } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Container } from 'semantic-ui-react';\nimport { DataContext } from '../components/DataProvider';\nimport VideoCardGroup from '../components/VideoCardGroup';\n\nconst IntraMovies = () => {\n    const values = useContext(DataContext);\n    console.log(values);\n    \n    return (\n        <Container>\n            <Helmet>\n                <title>IntraMovies | uCinema</title>\n                <meta name=\"description\" content=\"Watch movies on uCinema\" />\n            </Helmet>\n            <VideoCardGroup intra list={values.cloudData} />\n        </Container>\n    );\n};\n\nexport default IntraMovies;","import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { Header, Container, Segment, Image, Item, Embed, Label } from 'semantic-ui-react';\nimport { DataContext } from '../components/DataProvider';\nimport routes from \"./../utils/routes\";\n\nconst baseRoute = routes.baseRoute;\n\nconst Episodes = ({eps, epId}) => {\n    return (\n        <Label.Group style={{paddingTop: '20px'}}>\n        {\n            eps.map(dt => (\n                <Label\n                    as={Link}\n                    key={dt.title}\n                    content={dt.title}\n                    icon='mail'\n                    active={(epId === dt.id)}\n                    href={`${baseRoute}/watch/${dt.parentId}/${dt.id}`}\n                    to={`${baseRoute}/watch/${dt.parentId}/${dt.id}`}\n                />\n            ))\n        }\n        </Label.Group>\n    );\n};\n\nconst WatchVideo = () => {\n    const values = useContext(DataContext);\n    const { name, subname } = useParams();\n    \n    let item = values.data.filter(d => name === d.id)[0];\n    const [ imdbInfo, setImdbInfo ] = useState(null);\n\n    useEffect(() => {\n        if(item && item.imdbID) {\n            fetch(`http://www.omdbapi.com/?i=${item.imdbID}&apikey=c11086ed&plot=full`)\n                .then(response => response.json())\n                .then(data => setImdbInfo(data));\n        }\n    }, [item]);\n\n    const extras = item && item.widerImgUrl ? { placeholder: item.widerImgUrl } : {};\n\n    let eps = [];\n    if(item) {\n        eps = values.subData[item.id] || [];\n    }\n\n    let epId = subname;\n    if(!epId) {\n        if(eps.length > 0) {\n            epId = eps[0].id;\n        }\n    }\n\n    if(eps.length > 0) {\n        let { title, url, type } = eps.filter(d => epId === d.id)[0] || {};\n        item = { ...item, title, url, type };\n    }\n\n    return (\n        <Container>\n            { item && (\n                <Helmet>\n                    <title>Watch {item.title} | uCinema</title>\n                    <meta name=\"description\" content={`Watch ${item.title}`} />\n                </Helmet>\n            ) }\n            { values.isLoading && (\n                <Segment loading>\n                    <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' />\n                </Segment>\n            )}\n            { item && (\n                <Header as='h2'>\n                    {item.title}\n                    <Header.Subheader>\n                    {item.desc}\n                    </Header.Subheader>\n                </Header>\n            ) }\n            { item && (item.type === 'youtube' ? (<Embed\n                    id={item.url}\n                    source='youtube'\n                    iframe={{ allowFullScreen: true }}\n                    {...extras}\n                />) : (<Embed\n                    url={item.url}\n                    iframe={{ allowFullScreen: true }}\n                    {...extras}\n                />))\n            }\n            <Episodes eps={eps} epId={epId} />\n            { imdbInfo && (\n                    <Item.Group\n                        items={[{\n                            image: imdbInfo.Poster,\n                            header: imdbInfo.Title,\n                            description: imdbInfo.Plot,\n                            meta: (\n                            <div>\n                                <b>Year:</b> {imdbInfo.Year} <br />\n                                <b>Released:</b> {imdbInfo.Released} <br />\n                                <b>Genre:</b> {imdbInfo.Genre} <br />\n                                <b>Director:</b> {imdbInfo.Director} <br />\n                                <b>Writer:</b> {imdbInfo.Writer}\n                            </div>\n                            ),\n                            extra: '',\n                        }]}\n                    />\n                )\n            }\n            <br /><br /><br />\n        </Container>\n    );\n};\n\nexport default WatchVideo;","import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { Header, Container, Segment, Image, Item, Embed, Label } from 'semantic-ui-react';\nimport { DataContext } from '../components/DataProvider';\nimport routes from \"./../utils/routes\";\nimport config from '../config';\n\nconst baseRoute = routes.baseRoute;\n\nconst Episodes = ({eps, epId}) => {\n    return (\n        <Label.Group style={{paddingTop: '20px'}}>\n        {\n            eps.map(dt => (\n                <Label\n                    as={Link}\n                    key={dt.title}\n                    content={dt.title}\n                    icon='mail'\n                    active={(epId === dt.id)}\n                    href={`${baseRoute}/intra/watch/${dt.parentId}/${dt.id}`}\n                    to={`${baseRoute}/intra/watch/${dt.parentId}/${dt.id}`}\n                />\n            ))\n        }\n        </Label.Group>\n    );\n};\n\nconst IntraWatchVideo = () => {\n    const values = useContext(DataContext);\n    const { name, subname } = useParams();\n    \n    let item = values.cloudData.filter(d => name === d.id)[0];\n    const [ imdbInfo, setImdbInfo ] = useState(null);\n\n    useEffect(() => {\n        if(item && item.imdbID) {\n            fetch(`http://www.omdbapi.com/?i=${item.imdbID}&apikey=c11086ed&plot=full`)\n                .then(response => response.json())\n                .then(data => setImdbInfo(data));\n        }\n    }, [item]);\n\n    const extras = item && item.widerImgUrl ? { placeholder: item.widerImgUrl } : {};\n\n    let eps = [];\n    if(item) {\n        eps = values.cloudSubData[item.id] || [];\n    }\n\n    let epId = subname;\n    if(!epId) {\n        if(eps.length > 0) {\n            epId = eps[0].id;\n        }\n    }\n\n    if(eps.length > 0) {\n        let { title, url, type } = eps.filter(d => epId === d.id)[0] || {};\n        item = { ...item, title, url, type };\n    }\n\n    return (\n        <Container>\n            { item && (\n                <Helmet>\n                    <title>Watch {item.title} | uCinema</title>\n                    <meta name=\"description\" content={`Watch ${item.title}`} />\n                </Helmet>\n            ) }\n            { values.isLoading && (\n                <Segment loading>\n                    <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' />\n                </Segment>\n            )}\n            { item && (\n                <Header as='h2'>\n                    {item.title}\n                    <Header.Subheader>\n                    {item.desc}\n                    </Header.Subheader>\n                </Header>\n            ) }\n            { item && (item.type === 'youtube' ? (<Embed\n                    id={item.url}\n                    source='youtube'\n                    iframe={{ allowFullScreen: true }}\n                    {...extras}\n                />) : (<Embed\n                    url={`${config.intraBaseUrl}${item.url}`}\n                    iframe={{ allowFullScreen: true }}\n                    {...extras}\n                />))\n            }\n            <Episodes eps={eps} epId={epId} />\n            { imdbInfo && (\n                    <Item.Group\n                        items={[{\n                            image: imdbInfo.Poster,\n                            header: imdbInfo.Title,\n                            description: imdbInfo.Plot,\n                            meta: (\n                            <div>\n                                <b>Year:</b> {imdbInfo.Year} <br />\n                                <b>Released:</b> {imdbInfo.Released} <br />\n                                <b>Genre:</b> {imdbInfo.Genre} <br />\n                                <b>Director:</b> {imdbInfo.Director} <br />\n                                <b>Writer:</b> {imdbInfo.Writer}\n                            </div>\n                            ),\n                            extra: '',\n                        }]}\n                    />\n                )\n            }\n            <br /><br /><br />\n        </Container>\n    );\n};\n\nexport default IntraWatchVideo;","import React, { useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport ReactGA from 'react-ga';\n\nconst DetectRouteChange = () => {\n  const history = useHistory();\n  useEffect(() => {\n      return history.listen((location) => {\n          ReactGA.set({ page: location.pathname });\n          ReactGA.pageview(location.pathname)\n      });\n  }, [history]);\n\n  return <div />\n};\n\nexport default DetectRouteChange;","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\nimport AppMenu from './containers/AppMenu';\nimport Home from './containers/Home';\nimport Movies from './containers/Movies';\nimport TvSeries from './containers/TvSeries';\nimport IntraMovies from './containers/IntraMovies';\nimport WatchVideo from './containers/WatchVideo';\nimport IntraWatchVideo from './containers/IntraWatchVideo';\nimport DetectRouteChange from './components/DetectRouteChange';\nimport routes from \"./utils/routes\"\n\nconst baseRoute = routes.baseRoute;\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <DetectRouteChange />\n        <AppMenu />\n        <Switch>\n          <Route exact path={`${baseRoute}/`}>\n            <Home />\n          </Route>\n          <Route path={`${baseRoute}/movies`}>\n            <Movies />\n          </Route>\n          <Route path={`${baseRoute}/tv-series`}>\n            <TvSeries />\n          </Route>\n          <Route path={`${baseRoute}/watch/:name/:subname?`}>\n            <WatchVideo />\n          </Route>\n          <Route path={`${baseRoute}/intra-movies`}>\n            <IntraMovies />\n          </Route>\n          <Route path={`${baseRoute}/intra/watch/:name/:subname?`}>\n            <IntraWatchVideo />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\nimport DataProvider from './components/DataProvider';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nReactGA.initialize('UA-17018575-1');\n"],"sourceRoot":""}