{"version":3,"sources":["utils/fetchGoogleSheet.js","utils/parseGoogleSheet.js","components/DataProvider.js","utils/routes.js","hooks/useSearch.js","containers/AppMenu.js","components/VideoCard.js","components/VideoCardGroup.js","containers/Home.js","containers/Movies.js","containers/TvSeries.js","containers/WatchVideo.js","components/DetectRouteChange.js","App.js","serviceWorker.js","index.js"],"names":["a","spreadsheetId","sheetNum","tab","fetchUrl","fetch","then","response","status","json","feed","entry","data","rowData","reduce","prev","curr","row","col","content","rowIndex","colIndex","fetchGoogleSheet","hiddenTags","parseGoogleSheet","responseData","first","rest","keys","Object","d","ob","prevOb","currKey","key","value","indexOf","push","DataContext","React","createContext","DataProvider","props","useState","isLoading","subData","setRowData","useEffect","dd","filter","parentId","temp","hidden","Provider","children","routes","baseRoute","useSearch","records","loading","results","setData","history","useHistory","handleSearchChange","useCallback","e","item","title","toLowerCase","handleResultSelect","result","id","withRouter","activeItem","location","pathname","values","useContext","Menu","fixed","inverted","Item","header","as","Link","name","active","href","to","position","Responsive","Search","onSearchChange","onResultSelect","minWidth","Container","maxWidth","style","padding","marginTop","input","width","paddingBottom","VideoCard","imgUrl","gUrl","createdDate","Card","className","Image","size","src","wrapped","ui","Content","Description","VideoCardGroup","list","Group","map","Home","Movies","movies","category","TvSeries","series","Episodes","eps","epId","Label","paddingTop","dt","icon","WatchVideo","useParams","subname","imdbInfo","setImdbInfo","imdbID","extras","widerImgUrl","placeholder","length","url","type","Segment","Header","Subheader","desc","Embed","source","iframe","allowFullScreen","items","image","Poster","Title","description","Plot","meta","Year","Released","Genre","Director","Writer","extra","DetectRouteChange","listen","ReactGA","set","page","pageview","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.12afb02f.chunk.js","sourcesContent":["async function fetchGoogleSheet({spreadsheetId, sheetNum}) {\n  const tab = sheetNum || 1;\n  const fetchUrl = `https://spreadsheets.google.com/feeds/cells/${spreadsheetId}/${tab}/public/full?alt=json`;\n  const data = await fetch(fetchUrl).then(response => {\n    if(response.status === 200) {\n      return response.json();\n    } else {\n      return { feed: { entry: [] }};\n    }\n  });\n  // let count = 0;\n  const rowData = data.feed.entry.reduce((prev, curr) => {\n     const { row, col } = curr['gs$cell'];\n     const content = curr.content['$t'];\n     const rowIndex = row - 1;\n     const colIndex = col - 1;\n     if(prev[rowIndex]) {\n       prev[rowIndex][`col${colIndex}`] = content;\n     } else {\n       prev[rowIndex] = { [`col${colIndex}`]: content };\n     }\n     return prev;\n  }, []);\n  return rowData;\n}\n\nexport default fetchGoogleSheet;","const hiddenTags = ['hidden', 'y'];\n\nconst parseGoogleSheet = responseData => {\n  const [ first = {}, ...rest ] = responseData;\n  const keys = Object.keys(first);\n\n  const data = rest.reduce((prev, d) => {\n      const ob = keys.reduce((prevOb, currKey) => {\n          const key = first[currKey] || currKey;\n          const value = d[currKey];\n          if(key === 'hidden') {\n              prevOb[key] = hiddenTags.indexOf(value) > -1 ? true : false;\n          } else {\n              prevOb[key] = value;\n          }\n          return prevOb;\n      }, {});\n      prev.push(ob);\n      return prev;\n  }, []);\n\n  return data;\n};\n\nexport default parseGoogleSheet;","import React, { useState, useEffect } from 'react';\nimport fetchGoogleSheet from '../utils/fetchGoogleSheet';\nimport parseGoogleSheet from '../utils/parseGoogleSheet';\n\nconst DataContext = React.createContext({});\n\nconst DataProvider = (props) => {\n    const [ rowData, setRowData ] = useState({ isLoading: true, data: [], subData: {} });\n    useEffect(() => {\n        fetchGoogleSheet({\n            spreadsheetId: '1xqxT4Q0Zh4n9W5GYew-ltxfb4oG42icVlHQEX_RErQE',\n            sheetNum: 1\n        })\n        .then(parseGoogleSheet)\n        .then(dd => {\n            const subData = {};\n            const data = dd.filter(d => {\n                if(d.parentId) {\n                    const temp = subData[d.parentId] || [];\n                    subData[d.parentId] = [...temp, d];\n                }\n                return !d.hidden && !d.parentId;\n            });\n            \n            setRowData({ isLoading: false, data, subData });\n            return data;\n        });\n    }, [])\n    return (\n        <DataContext.Provider value={rowData}>\n          {props.children}\n        </DataContext.Provider>\n    );\n};\n\nexport { DataContext };\n\nexport default DataProvider;","const routes = {\n  baseRoute: ''\n};\n\nexport default routes;","import { useState, useCallback } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nconst useSearch = (records) => {\n  const initData = { loading: false, value: '', results: [] };\n\n  const [ data, setData ] = useState(initData);\n  const history = useHistory();\n\n  const handleSearchChange = useCallback((e, { value }) => {\n    setData({ loading: true, value, results: [] });\n    const results = records.filter(item => item.title.toLowerCase().indexOf(value) > -1);\n    setData({ loading: false, value, results });\n  }, [records]);\n\n  const handleResultSelect = useCallback((e, { result }) => {\n    setData({ loading: false, value: '', results: [] });\n    history.push(`/watch/${result.id}`);\n  }, [history]);\n\n  return {\n    data,\n    handleSearchChange,\n    handleResultSelect\n  }\n};\n\nexport default useSearch;","import React, { useContext } from 'react';\nimport { Menu, Search, Responsive, Container } from 'semantic-ui-react';\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { DataContext } from '../components/DataProvider';\nimport routes from \"../utils/routes\";\nimport useSearch from '../hooks/useSearch';\n\nconst baseRoute = routes.baseRoute;\nconst bottomSpacing = '20px';\n\nconst AppMenu = ({ location }) => {\n    const activeItem = location.pathname;\n    const values = useContext(DataContext);\n\n    const { data, handleSearchChange, handleResultSelect } = useSearch(values.data);\n    \n    return (\n      <>\n        <Menu fixed='top' inverted>\n          <Menu.Item header>uCinema</Menu.Item>\n          <Menu.Item\n            as={Link}\n            name='home'\n            active={activeItem === `${baseRoute}/`}\n            href={`${baseRoute}/`}\n            to={`${baseRoute}/`}\n          />\n          <Menu.Item\n            as={Link}\n            name='movies'\n            active={activeItem === `${baseRoute}/movies`}\n            href={`${baseRoute}/movies`}\n            to={`${baseRoute}/movies`}\n          />\n          <Menu.Item\n            as={Link}\n            name='tv-series'\n            active={activeItem === `${baseRoute}/tv-series`}\n            href={`${baseRoute}/tv-series`}\n            to={`${baseRoute}/tv-series`}\n          />\n          <Menu.Menu position='right'>\n            <Menu.Item>\n              <Responsive\n                as={Search}\n                loading={data.loading}\n                results={data.results}\n                value={data.value}\n                onSearchChange={handleSearchChange}\n                onResultSelect={handleResultSelect}\n                minWidth={550}\n              />\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n        <Responsive\n          as={Container}\n          maxWidth={550}\n          style={{ padding: `${bottomSpacing} 0`, marginTop: '40px' }}>\n          <Search\n            loading={data.loading}\n            results={data.results}\n            value={data.value}\n            onSearchChange={handleSearchChange}\n            onResultSelect={handleResultSelect}\n            minWidth={550}\n            input={{ style: { width: '100%' } }}\n          />\n        </Responsive>\n        <Responsive\n          as=\"div\"\n          minWidth={550}\n          style={{ paddingBottom: bottomSpacing, marginTop: '64px' }}\n        />\n      </>\n    );\n};\n\nexport default withRouter(AppMenu);","import React from 'react';\nimport { Card, Image } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\nimport routes from \"./../utils/routes\";\nimport './VideoCard.css';\n\nconst baseRoute = routes.baseRoute;\n\nconst VideoCard = ({ id, title, imgUrl, createdDate }) => {\n    const gUrl = imgUrl || 'https://i.imgur.com/0FX7ZPe.jpg';\n    return (\n        <Card as={Link} href={`${baseRoute}/watch/${id}`} to={`${baseRoute}/watch/${id}`} className=\"video-card\">\n            <Image className=\"fixed-height\" size=\"medium\" src={gUrl} wrapped ui={false} />\n            <Card.Content className=\"content-over-image\">\n                {/*<Card.Meta>\n                    <span className='date'>Added on {createdDate}</span>\n                </Card.Meta>*/}\n                <Card.Description className=\"color-white\">\n                {title}\n                </Card.Description>\n            </Card.Content>\n        </Card>\n    );\n};\n\nexport default VideoCard;","import React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport VideoCard from '../components/VideoCard';\n\nconst VideoCardGroup = ({ list }) => {\n  return (\n    <Card.Group>\n        {\n            list.map(item => (\n              <VideoCard\n                key={item.id}\n                id={item.id}\n                title={item.title}\n                imgUrl={item.imgUrl}\n                createdDate={item.createdDate}\n              />\n            ))\n        }\n    </Card.Group>\n  );\n};\n\nexport default VideoCardGroup;","import React, { useContext } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { DataContext } from '../components/DataProvider';\nimport VideoCardGroup from '../components/VideoCardGroup';\n\nconst Home = () => {\n    const values = useContext(DataContext);\n    \n    return (\n        <Container>\n            <VideoCardGroup list={values.data} />\n        </Container>\n    );\n};\n\nexport default Home;","import React, { useContext } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { DataContext } from '../components/DataProvider';\nimport VideoCardGroup from '../components/VideoCardGroup';\n\nconst Movies = () => {\n    const values = useContext(DataContext);\n    const movies = values.data.filter(item => item.category === 'movie');\n\n    return (\n        <Container>\n            <VideoCardGroup list={movies} />\n        </Container>\n    );\n};\n\nexport default Movies;","import React, { useContext } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { DataContext } from '../components/DataProvider';\nimport VideoCardGroup from '../components/VideoCardGroup';\n\nconst TvSeries = () => {\n    const values = useContext(DataContext);\n    const series = values.data.filter(item => item.category === 'series');\n\n    return (\n        <Container>\n            <VideoCardGroup list={series} />\n        </Container>\n    );\n};\n\nexport default TvSeries;","import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Link } from \"react-router-dom\";\nimport { Header, Container, Segment, Image, Item, Embed, Label } from 'semantic-ui-react';\nimport { DataContext } from '../components/DataProvider';\nimport routes from \"./../utils/routes\";\n\nconst baseRoute = routes.baseRoute;\n\nconst Episodes = ({eps, epId}) => {\n    return (\n        <Label.Group style={{paddingTop: '20px'}}>\n        {\n            eps.map(dt => (\n                <Label\n                    as={Link}\n                    key={dt.title}\n                    content={dt.title}\n                    icon='mail'\n                    active={(epId === dt.id)}\n                    href={`${baseRoute}/watch/${dt.parentId}/${dt.id}`}\n                    to={`${baseRoute}/watch/${dt.parentId}/${dt.id}`}\n                />\n            ))\n        }\n        </Label.Group>\n    );\n};\n\nconst WatchVideo = () => {\n    const values = useContext(DataContext);\n    const { name, subname } = useParams();\n    \n    let item = values.data.filter(d => name === d.id)[0];\n    const [ imdbInfo, setImdbInfo ] = useState(null);\n\n    useEffect(() => {\n        if(item && item.imdbID) {\n            fetch(`http://www.omdbapi.com/?i=${item.imdbID}&apikey=c11086ed&plot=full`)\n                .then(response => response.json())\n                .then(data => setImdbInfo(data));\n        }\n    }, [item]);\n\n    const extras = item && item.widerImgUrl ? { placeholder: item.widerImgUrl } : {};\n\n    let eps = [];\n    if(item) {\n        eps = values.subData[item.id] || [];\n    }\n\n    let epId = subname;\n    if(!epId) {\n        if(eps.length > 0) {\n            epId = eps[0].id;\n        }\n    }\n\n    if(eps.length > 0) {\n        let { title, url, type } = eps.filter(d => epId === d.id)[0] || {};\n        item = { ...item, title, url, type };\n    }\n\n    return (\n        <Container>\n            { values.isLoading && (\n                <Segment loading>\n                    <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' />\n                </Segment>\n            )}\n            { item && (\n                <Header as='h2'>\n                    {item.title}\n                    <Header.Subheader>\n                    {item.desc}\n                    </Header.Subheader>\n                </Header>\n            ) }\n            { item && (item.type === 'youtube' ? (<Embed\n                    id={item.url}\n                    source='youtube'\n                    iframe={{ allowFullScreen: true }}\n                    {...extras}\n                />) : (<Embed\n                    url={item.url}\n                    iframe={{ allowFullScreen: true }}\n                    {...extras}\n                />))\n            }\n            <Episodes eps={eps} epId={epId} />\n            { imdbInfo && (\n                    <Item.Group\n                        items={[{\n                            image: imdbInfo.Poster,\n                            header: imdbInfo.Title,\n                            description: imdbInfo.Plot,\n                            meta: (\n                            <div>\n                                <b>Year:</b> {imdbInfo.Year} <br />\n                                <b>Released:</b> {imdbInfo.Released} <br />\n                                <b>Genre:</b> {imdbInfo.Genre} <br />\n                                <b>Director:</b> {imdbInfo.Director} <br />\n                                <b>Writer:</b> {imdbInfo.Writer}\n                            </div>\n                            ),\n                            extra: '',\n                        }]}\n                    />\n                )\n            }\n            <br /><br /><br />\n        </Container>\n    );\n};\n\nexport default WatchVideo;","import React, { useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport ReactGA from 'react-ga';\n\nconst DetectRouteChange = () => {\n  const history = useHistory();\n  useEffect(() => {\n      return history.listen((location) => {\n          ReactGA.set({ page: location.pathname });\n          ReactGA.pageview(location.pathname)\n      });\n  }, [history]);\n\n  return <div />\n};\n\nexport default DetectRouteChange;","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\nimport AppMenu from './containers/AppMenu';\nimport Home from './containers/Home';\nimport Movies from './containers/Movies';\nimport TvSeries from './containers/TvSeries';\nimport WatchVideo from './containers/WatchVideo';\nimport DetectRouteChange from './components/DetectRouteChange';\nimport routes from \"./utils/routes\"\n\nconst baseRoute = routes.baseRoute;\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <DetectRouteChange />\n        <AppMenu />\n        <Switch>\n          <Route exact path={`${baseRoute}/`}>\n            <Home />\n          </Route>\n          <Route path={`${baseRoute}/movies`}>\n            <Movies />\n          </Route>\n          <Route path={`${baseRoute}/tv-series`}>\n            <TvSeries />\n          </Route>\n          <Route path={`${baseRoute}/watch/:name/:subname?`}>\n            <WatchVideo />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport DataProvider from './components/DataProvider';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}